use std::collections::HashMap;

pub enum Type {
    Void,
    Bool,
    Int8,
    UInt8,
    Int16,
    UInt16,
    Int32,
    UInt32,
    Float,
    Double,
    String,
    List(Box<Type>),
    Map { key: Box<Type>, value: Box<Type> },
    Object,
    Tuple(Vec<Type>),
    Raw,
    VarArgs(Box<Type>),
    KwArgs(Box<Type>),
    Optional(Box<Type>),
    Dynamic,
    Unknown,
}

pub enum Value {
    Void,
    Bool(bool),
    Int8(i8),
    UInt8(u8),
    Int16(i16),
    UInt16(u16),
    Int32(i32),
    UInt32(u32),
    Float(f32),
    Double(f64),
    String(String),
    List(Vec<Value>),
    Map(HashMap<Value, Value>),
    Object(Box<dyn crate::Object>),
    Tuple(Vec<Value>),
    Raw(Vec<u8>),
    Optional(Box<Value>),
}
